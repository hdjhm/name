local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Create a ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RemoteEventLogger"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create a ScrollingFrame to display logs
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, 0, 0.3, 0)
scrollingFrame.Position = UDim2.new(0, 0, 0.7, 0)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 5, 0)
scrollingFrame.Parent = screenGui

-- Create a UIListLayout for the ScrollingFrame
local listLayout = Instance.new("UIListLayout")
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Parent = scrollingFrame

-- Function to log RemoteEvents
local function logRemoteEvents()
    for _, child in ipairs(ReplicatedStorage:GetChildren()) do
        if child:IsA("RemoteEvent") then
            child.OnClientEvent:Connect(function(...)
                local eventName = child.Name
                local args = {...}
                local logText = "RemoteEvent fired: " .. eventName .. " Args: " .. table.concat(args, ", ")

                -- Create a TextLabel for the log
                local logLabel = Instance.new("TextLabel")
                logLabel.Size = UDim2.new(1, 0, 0, 50)
                logLabel.Text = logText
                logLabel.TextSize = 14
                logLabel.TextWrapped = true
                logLabel.TextXAlignment = Enum.TextXAlignment.Left
                logLabel.TextYAlignment = Enum.TextYAlignment.Top
                logLabel.BackgroundTransparency = 1
                logLabel.Parent = scrollingFrame

                -- Adjust CanvasSize
                scrollingFrame.CanvasSize = UDim2.new(0, 0, listLayout.AbsoluteContentSize.Y, 0)
            end)
        end
    end
end

-- Start logging RemoteEvents
logRemoteEvents()
